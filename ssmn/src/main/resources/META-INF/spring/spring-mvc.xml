<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:mvc="http://www.springframework.org/schema/mvc"
    xmlns:util="http://www.springframework.org/schema/util"
    xmlns:aop="http://www.springframework.org/schema/aop"
    xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
    ">

    <mvc:annotation-driven>
        <mvc:argument-resolvers>
            <bean
                class="org.springframework.data.web.PageableHandlerMethodArgumentResolver" />
            <bean
                class="org.springframework.security.web.method.annotation.AuthenticationPrincipalArgumentResolver" />
            <bean
                class="org.terasoluna.gfw.web.token.transaction.TransactionTokenContextHandlerMethodArgumentResolver" />
        </mvc:argument-resolvers>
        <!-- workaround to CVE-2016-5007. -->
        <mvc:path-matching path-matcher="pathMatcher" />
    </mvc:annotation-driven>

    <mvc:default-servlet-handler />

    <context:component-scan base-package="jp.co.ntt.cloud.functionaltest.app" />

    <mvc:resources mapping="/resources/**"
        location="/resources/,classpath:META-INF/resources/"
        cache-period="#{60 * 60}" />

    <mvc:interceptors>
        <mvc:interceptor>
            <mvc:mapping path="/**" />
            <mvc:exclude-mapping path="/resources/**" />
            <bean
                class="org.terasoluna.gfw.web.logging.TraceLoggingInterceptor" />
        </mvc:interceptor>
        <mvc:interceptor>
          <mvc:mapping path="/**" />
          <mvc:exclude-mapping path="/resources/**" />
          <mvc:exclude-mapping path="/transactiontoken/customTransactionStoreSize2/**" />
          <mvc:exclude-mapping path="/transactiontoken/customTransactionStoreSize1/**" />
          <bean class="org.terasoluna.gfw.web.token.transaction.TransactionTokenInterceptor" >
            <constructor-arg index="0">
              <bean class="org.terasoluna.gfw.web.token.TokenStringGenerator" />
            </constructor-arg>
            <constructor-arg index="1">
              <bean
                  class="org.terasoluna.gfw.web.token.transaction.TransactionTokenInfoStore" />
            </constructor-arg>
            <constructor-arg index="2">
              <bean class="jp.co.ntt.cloud.functionaltest.token.MyBatisTransactionTokenStore" />
            </constructor-arg>
          </bean>
        </mvc:interceptor>
        <mvc:interceptor>
          <mvc:mapping path="/transactiontoken/customTransactionStoreSize2/**" />
          <mvc:exclude-mapping path="/resources/**" />
          <bean class="org.terasoluna.gfw.web.token.transaction.TransactionTokenInterceptor" >
            <constructor-arg index="0">
              <bean class="org.terasoluna.gfw.web.token.TokenStringGenerator" />
            </constructor-arg>
            <constructor-arg index="1">
              <bean
                  class="org.terasoluna.gfw.web.token.transaction.TransactionTokenInfoStore" />
            </constructor-arg>
            <constructor-arg index="2">
              <bean class="jp.co.ntt.cloud.functionaltest.token.MyBatisTransactionTokenStore">
                  <constructor-arg value="2" />
              </bean>
            </constructor-arg>
          </bean>
        </mvc:interceptor>
        <mvc:interceptor>
          <mvc:mapping path="/transactiontoken/customTransactionStoreSize1/**" />
          <mvc:exclude-mapping path="/resources/**" />
          <bean class="org.terasoluna.gfw.web.token.transaction.TransactionTokenInterceptor" >
            <constructor-arg index="0">
              <bean class="org.terasoluna.gfw.web.token.TokenStringGenerator" />
            </constructor-arg>
            <constructor-arg index="1">
              <bean
                  class="org.terasoluna.gfw.web.token.transaction.TransactionTokenInfoStore" />
            </constructor-arg>
            <constructor-arg index="2">
              <bean class="jp.co.ntt.cloud.functionaltest.token.MyBatisTransactionTokenStore">
                  <constructor-arg value="1" />
              </bean>
            </constructor-arg>
          </bean>
        </mvc:interceptor>
    </mvc:interceptors>

    <!-- Settings View Resolver. -->
    <mvc:view-resolvers>
        <mvc:bean-name />
        <mvc:tiles />
        <mvc:jsp prefix="/WEB-INF/views/" />
    </mvc:view-resolvers>

    <mvc:tiles-configurer>
      <mvc:definitions location="/WEB-INF/tiles/tiles-definitions.xml" />
    </mvc:tiles-configurer>

    <bean id="requestDataValueProcessor"
        class="org.terasoluna.gfw.web.mvc.support.CompositeRequestDataValueProcessor">
        <constructor-arg>
            <util:list>
                <bean
                    class="org.springframework.security.web.servlet.support.csrf.CsrfRequestDataValueProcessor" />
                <bean
                    class="org.terasoluna.gfw.web.token.transaction.TransactionTokenRequestDataValueProcessor" />
            </util:list>
        </constructor-arg>
    </bean>

    <!-- Setting Exception Handling. -->
    <!-- Exception Resolver. -->
    <bean id="systemExceptionResolver"
        class="org.terasoluna.gfw.web.exception.SystemExceptionResolver">
        <property name="exceptionCodeResolver" ref="exceptionCodeResolver" />
        <!-- Setting and Customization by project. -->
        <property name="order" value="3" />
        <property name="exceptionMappings">
            <map>
                <entry key="ResourceNotFoundException" value="common/error/notFoundError" />
                <entry key="BusinessException" value="common/error/businessError" />
                <entry key="InvalidTransactionTokenException" value="common/error/tokenError" />
                <entry key="DataAccessException" value="common/error/dataAccessError" />
            </map>
        </property>
        <property name="statusCodes">
            <map>
                <entry key="common/error/notFoundError" value="404" />
                <entry key="common/error/businessError" value="409" />
                <entry key="common/error/tokenError" value="409" />
                <entry key="common/error/dataAccessError" value="500" />
            </map>
        </property>
        <property name="excludedExceptions">
            <array>
                <value>org.springframework.web.util.NestedServletException</value>
            </array>
        </property>
        <property name="defaultErrorView" value="common/error/systemError" />
        <property name="defaultStatusCode" value="500" />
    </bean>
    <!-- Setting AOP. -->
    <bean id="handlerExceptionResolverLoggingInterceptor"
        class="org.terasoluna.gfw.web.exception.HandlerExceptionResolverLoggingInterceptor">
        <property name="exceptionLogger" ref="exceptionLogger" />
    </bean>
    <aop:config>
        <aop:advisor advice-ref="handlerExceptionResolverLoggingInterceptor"
            pointcut="execution(* org.springframework.web.servlet.HandlerExceptionResolver.resolveException(..))" />
    </aop:config>

    <!-- Setting PathMatcher. -->
    <bean id="pathMatcher" class="org.springframework.util.AntPathMatcher">
        <property name="trimTokens" value="false" />
    </bean>
    
    <bean class="jp.co.ntt.cloud.functionaltest.app.common.RequestDataValueProcessorPostProcessor"/>
    
    <bean class="jp.co.ntt.cloud.functionaltest.app.common.DefaultFiltersBeanFactoryPostProcessor"/>

</beans>
