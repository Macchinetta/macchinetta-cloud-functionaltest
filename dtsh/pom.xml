<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <artifactId>dtsh</artifactId>
    <packaging>war</packaging>
    <parent>
        <groupId>jp.co.ntt.cloud.functionaltest</groupId>
        <artifactId>macchinetta-cloud-functionaltest</artifactId>
        <version>1.1.1.RELEASE</version>
        <relativePath>../pom.xml</relativePath>
    </parent>

    <name>Functional test for Macchinetta cloud guideline (${project.artifactId})</name>

    <properties>
        <proxyhost></proxyhost>
        <proxyport></proxyport>
        <proxyusername></proxyusername>
        <proxypassword></proxypassword>
        <project.root.basedir>${project.parent.basedir}</project.root.basedir>
        <db.driver>org.postgresql.Driver</db.driver>
        <db.username>postgres</db.username>
        <db.password>postgres</db.password>
        <db.encoding>UTF8</db.encoding>
        <db.delimiterType>row</db.delimiterType>
        <sql.script.folder>${project.basedir}/src/main/resources/sqls</sql.script.folder>
        <shard.db.data.source.keys>shard1,shard2</shard.db.data.source.keys>
        <dynamo.db.region>ap-northeast-1</dynamo.db.region>
        <dynamo.db.tablename>functionaltestShardAccount</dynamo.db.tablename>
        <dynamo.db.tableidname>user_id</dynamo.db.tableidname>
        <dynamo.db.tablevaluename>data_source_key</dynamo.db.tablevaluename>
    </properties>

    <build>
        <plugins>
            <plugin>
                <groupId>org.codehaus.cargo</groupId>
                <artifactId>cargo-maven2-plugin</artifactId>
                <executions>
                    <execution>
                        <id>start-container</id>
                        <phase>pre-integration-test</phase>
                        <goals>
                            <goal>start</goal>
                        </goals>
                        <configuration>
                            <timeout>130000</timeout>
                        </configuration>
                    </execution>
                    <execution>
                        <id>stop-container</id>
                        <phase>post-integration-test</phase>
                        <goals>
                            <goal>stop</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <configuration>
                        <type>standalone</type>
                        <properties>
                            <cargo.servlet.port>${cargo.servlet.port}</cargo.servlet.port>
                            <cargo.rmi.port>${cargo.rmi.port}</cargo.rmi.port>
                            <cargo.tomcat.ajp.port>${cargo.tomcat.ajp.port}</cargo.tomcat.ajp.port>
                            <cargo.jvmargs>${cargo.jvmargs}</cargo.jvmargs>
                            <cargo.logging>low</cargo.logging>
                        </properties>
                    </configuration>
                    <deployables>
                        <deployable>
                            <location>${project.build.directory}/${project.artifactId}.war</location>
                            <type>war</type>
                            <pingURL><![CDATA[http://localhost:${cargo.servlet.port}/${project.artifactId}/]]></pingURL>
                            <pingTimeout>360000</pingTimeout>
                        </deployable>
                    </deployables>
                    <wait>false</wait>
                </configuration>
            </plugin>

            <!-- RDB初期化処理(DBが複数あるためMaven Pluginで対処) -->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>sql-maven-plugin</artifactId>
                <version>1.5</version>
                <dependencies>
                    <dependency>
                        <groupId>org.postgresql</groupId>
                        <artifactId>postgresql</artifactId>
                        <version>${postgresql.version}</version>
                    </dependency>
                </dependencies>
                <executions>
                    <execution>
                        <id>defalut</id>
                        <phase>initialize</phase>
                        <goals>
                            <goal>execute</goal>
                        </goals>
                        <configuration>
                            <driver>${db.driver}</driver>
                            <url>${db.url.default}</url>
                            <username>${db.username}</username>
                            <password>${db.password}</password>
                            <encoding>${db.encoding}</encoding>
                            <autocommit>false</autocommit>
                            <delimiterType>${db.delimiterType}</delimiterType>
                            <onError>continue</onError>
                            <skip>false</skip>
                            <srcFiles>
                                <srcFile>${sql.script.folder}/default/create_all_tables.sql</srcFile>
                                <srcFile>${sql.script.folder}/default/insert_data.sql</srcFile>
                            </srcFiles>
                            <orderFile>ascending</orderFile>
                        </configuration>
                    </execution>
                    <execution>
                        <id>shard1</id>
                        <phase>initialize</phase>
                        <goals>
                            <goal>execute</goal>
                        </goals>
                        <configuration>
                            <driver>${db.driver}</driver>
                            <url>${db.url.shard1}</url>
                            <username>${db.username}</username>
                            <password>${db.password}</password>
                            <encoding>${db.encoding}</encoding>
                            <autocommit>false</autocommit>
                            <delimiterType>${db.delimiterType}</delimiterType>
                            <onError>continue</onError>
                            <skip>false</skip>
                            <srcFiles>
                                <srcFile>${sql.script.folder}/shard/shard_create_all_tables.sql</srcFile>
                                <srcFile>${sql.script.folder}/shard/shard_insert_data.sql</srcFile>
                            </srcFiles>
                            <orderFile>ascending</orderFile>
                        </configuration>
                    </execution>
                    <execution>
                        <id>shard2</id>
                        <phase>initialize</phase>
                        <goals>
                            <goal>execute</goal>
                        </goals>
                        <configuration>
                            <driver>${db.driver}</driver>
                            <url>${db.url.shard2}</url>
                            <username>${db.username}</username>
                            <password>${db.password}</password>
                            <encoding>${db.encoding}</encoding>
                            <autocommit>false</autocommit>
                            <delimiterType>${db.delimiterType}</delimiterType>
                            <onError>continue</onError>
                            <skip>false</skip>
                            <srcFiles>
                                <srcFile>${sql.script.folder}/shard/shard_create_all_tables.sql</srcFile>
                                <srcFile>${sql.script.folder}/shard/shard_insert_data.sql</srcFile>
                            </srcFiles>
                            <orderFile>ascending</orderFile>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <artifactId>maven-antrun-plugin</artifactId>
                <executions>
                    <execution>
                        <phase>process-test-classes</phase>
                        <configuration>
                            <tasks>
                                <taskdef name="dynamoDBTask"
                                    classname="jp.co.ntt.cloud.functionaltest.infra.init.db.task.DynamoDBTask"
                                    classpathref="maven.compile.classpath" />
                                <dynamoDBTask region="${dynamo.db.region}"
                                    dbDriver="${db.driver}" dbUrl="${db.url.default}"
                                    dbUsername="${db.username}"
                                    dbPassword="${db.password}"
                                    tablename="${dynamo.db.tablename}"
                                    tableidname="${dynamo.db.tableidname}"
                                    tablevaluename="${dynamo.db.tablevaluename}"
                                    shardDataSourceKeys="${shard.db.data.source.keys}"
                                    proxyHost="${proxyhost}" proxyPort="${proxyport}"
                                    proxyUsername="${proxyusername}"
                                    proxyPassword="${proxypassword}" />
                            </tasks>
                        </configuration>
                        <goals>
                            <goal>run</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-resources-plugin</artifactId>
                <configuration>
                    <delimiters>
                        <delimiter>@</delimiter>
                    </delimiters>
                    <useDefaultDelimiters>false</useDefaultDelimiters>
                </configuration>
            </plugin>
        </plugins>

        <testResources>
            <testResource>
                <directory>${project.basedir}/src/test/resources</directory>
                <filtering>true</filtering>
            </testResource>
        </testResources>
    </build>

    <dependencies>
        <dependency>
            <groupId>org.apache.tomcat</groupId>
            <artifactId>tomcat-jdbc</artifactId>
        </dependency>
        <dependency>
            <groupId>com.github.derjust</groupId>
            <artifactId>spring-data-dynamodb</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-antrun-plugin</artifactId>
            <scope>compile</scope>
        </dependency>
    </dependencies>

    <profiles>
        <profile>
            <id>local</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <properties>
                <cargo.servlet.port>8082</cargo.servlet.port>
                <cargo.rmi.port>58091</cargo.rmi.port>
                <cargo.tomcat.ajp.port>58092</cargo.tomcat.ajp.port>
                <cargo.jvmargs></cargo.jvmargs>
                <db.url.default>jdbc:postgresql://localhost:5432/functionaltest</db.url.default>
                <db.url.shard1>jdbc:postgresql://localhost:5432/functionaltest_shard1</db.url.shard1>
                <db.url.shard2>jdbc:postgresql://localhost:5432/functionaltest_shard2</db.url.shard2>
            </properties>
        </profile>
        <profile>
            <id>ci</id>
            <activation>
                <activeByDefault>false</activeByDefault>
            </activation>
            <properties>
                <cargo.servlet.port>8082</cargo.servlet.port>
                <cargo.rmi.port>58091</cargo.rmi.port>
                <cargo.tomcat.ajp.port>58092</cargo.tomcat.ajp.port>
                <cargo.jvmargs>-Dspring.profiles.active=ci</cargo.jvmargs>
                <db.url.default>jdbc:postgresql://ci-functionaltest-1-1-x.xxxxxxxxxxxx.ap-northeast-1.rds.amazonaws.com:5432/functionaltest</db.url.default>
                <db.url.shard1>jdbc:postgresql://ci-functionaltest-1-1-x.xxxxxxxxxxxx.ap-northeast-1.rds.amazonaws.com:5432/functionaltest_shard1</db.url.shard1>
                <db.url.shard2>jdbc:postgresql://ci-functionaltest-1-1-x.xxxxxxxxxxxx.ap-northeast-1.rds.amazonaws.com:5432/functionaltest_shard2</db.url.shard2>
            </properties>
        </profile>
    </profiles>
</project>
